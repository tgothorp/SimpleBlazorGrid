@* ReSharper disable once CheckNamespace *@
@namespace SimpleBlazorGrid

@using SimpleBlazorGrid.Interfaces
@using SimpleBlazorGrid.Configuration

@implements IDataGrid<TType>

@inject SimpleDataGridConfiguration Configuration

@typeparam TType

<CascadingValue Value="this">
    @ChildContent

    @if (DataGridColumns.Any())
    {
        <div>
            <table class="simpleBg" style="--simple-bg-accent: @Configuration.AccentColour">
                <thead>
                <tr>
                    @foreach (var column in DataGridColumns)
                    {
                        <th>@column.Heading</th>
                    }
                </tr>
                </thead>
                <tbody>
                @foreach (var item in DataSource.Items())
                {
                    <DataGridRow TType="TType" Data="item" Columns="DataGridColumns"/>
                }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="@DataGridColumns.Count">
                            <div>
                                <p>Footer</p>
                            </div>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div>
            <DataGridPagingControls PageOptions="DataSource.PageOptions" PageChanged="OnPageChanged"/>
        </div>
    }
</CascadingValue>

@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public IDataGridSource<TType> DataSource { get; set; }

    [Parameter]
    public int ItemsPerPage { get; set; } = 5;

    private List<IColumn<TType>> DataGridColumns { get; set; } = new();

    protected override void OnParametersSet()
    {
        DataSource.PageOptions.ItemsPerPage = ItemsPerPage;
        base.OnParametersSet();
    }

    public void AddColumn(IColumn<TType> column)
    {
        DataGridColumns.Add(column);
        StateHasChanged();
    }

    private void OnPageChanged(int newPage)
    {
        DataSource.PageOptions.CurrentPage = newPage;
        StateHasChanged();
    }

}