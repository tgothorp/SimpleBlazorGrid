@page "/"
@using SimpleBlazorGrid.Sandbox.Data
@using SimpleBlazorGrid.Enums
@using SimpleBlazorGrid.DataSource

@inject ProductRepo ProductRepo

<PageTitle>Simple Blazor DataGrid</PageTitle>

<div style="width: 90%; padding-left: 5%; padding-right: 5%">
    <SimpleGrid TType="Product"
                DataSource="@(new SimpleDataGridEnumerableSource<Product>(Products))"
                Selectable="@true"
                ItemsPerPage="15"
                OnSelectionChanged="SelectedItemsChanged"
                Title="2024 Product Catalogue"
                Subtitle="All of Globex Corporation's upcoming products for sale in 2024">

        <Filters>
            <SimpleFilter TType="Product" Property="@nameof(Product.Name)"/>
            <SimpleFilter TType="Product" Property="@nameof(Product.CostInGbp)" Min="0" Max="2000" Step="0.01" />
        </Filters>
        <Columns>
            <SimpleColumn TType="Product" Property="@(nameof(Product.Id))" Width="10"/>
            <SimpleColumn TType="Product" Property="@(nameof(Product.Name))" Sortable="@true"/>
            <SimpleColumn TType="Product" Property="@(nameof(Product.CostInGbp))" Heading="Price (GBP)" Format="Format.Money" Sortable="@true"/>
            <SimpleColumn TType="Product" Property="@(nameof(Product.CostInLocalCurrency))" Heading="Price">
                <SimpleColumnTemplate Context="item">
                    @switch (item.LocalCurrency)
                    {
                        case Currency.GBP:
                            <i>£@item.CostInLocalCurrency.ToString("n2")</i>
                            break;
                        case Currency.USD:
                            <i>$@item.CostInLocalCurrency.ToString("n2")</i>
                            break;
                        case Currency.EUR:
                            <i>€@item.CostInLocalCurrency.ToString("n2")</i>
                            break;
                        default:
                            throw new ArgumentOutOfRangeException();
                    }
                </SimpleColumnTemplate>
            </SimpleColumn>
            <SimpleColumn TType="Product" Property="@nameof(Product.Manufacturer)"/>
            <SimpleColumn TType="Product" Property="@nameof(Product.LastOrderedOn)" Heading="Last Ordered" Format="Format.ShortDate" Sortable="@true"/>
        </Columns>
    </SimpleGrid>
</div>

<div style="width: 100%; padding-left: 5%; padding-right: 5%">
    @if (SelectedProducts.Any())
    {
        <h3>Selected Products</h3>
        <ul>
            @foreach (var product in SelectedProducts)
            {
                <li>#@product.Id @product.Name @product.CostInGbp.ToString("C")</li>
            }
        </ul>
    }
</div>

@code {

    private List<Product> Products { get; set; } = new();
    private List<Product> SelectedProducts { get; set; } = new();

    protected override void OnParametersSet()
    {
        Products = ProductRepo.GetAllProducts();
    }

    private void SelectedItemsChanged(List<Product> selectedProducts)
    {
        SelectedProducts = selectedProducts;
    }

}