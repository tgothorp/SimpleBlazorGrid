@* ReSharper disable once CheckNamespace *@
@namespace SimpleBlazorGrid.Internal

@typeparam TType

<div class="sdg-table-paging-container">
    <div>
        <small>Displaying Page: @(SimpleGrid.TableState.CurrentPage + 1) of @SimpleGrid.TableState.TotalPageCount (@SimpleGrid.TableState.TotalItemCount total records)</small>
    </div>

    <div class="sdg-table-paging-controls">

        <_DataGridPagingGlyph PageIndex="0" Selected="@(SimpleGrid.TableState.CurrentPage == 0)" Glyph="_DataGridPagingGlyph.PageGlyph.First" OnChangePage="ChangePage"/>

        @foreach (var page in Pages())
        {
            <_DataGridPagingGlyph PageIndex="page" Selected="@(page == SimpleGrid.TableState.CurrentPage)" Glyph="_DataGridPagingGlyph.PageGlyph.None" OnChangePage="ChangePage"/>
        }

        <_DataGridPagingGlyph PageIndex="@(SimpleGrid.TableState.TotalPageCount - 1)" Selected="@(SimpleGrid.TableState.CurrentPage == SimpleGrid.TableState.TotalPageCount - 1)" Glyph="_DataGridPagingGlyph.PageGlyph.Last" OnChangePage="ChangePage"/>

    </div>
</div>

@code {

    [CascadingParameter]
    public SimpleGrid<TType> SimpleGrid { get; set; }

    private List<int> Pages()
    {
        var result = new List<int>();

        if (SimpleGrid.TableState.CurrentPage > 0)
        {
            // If we are on the very last page we should add the page before the previous if possible
            if (SimpleGrid.TableState.CurrentPage == SimpleGrid.TableState.TotalPageCount - 1)
            {
                var twoPagesBackIndex = SimpleGrid.TableState.CurrentPage - 2;
                if (twoPagesBackIndex >= 0)
                {
                    result.Add(twoPagesBackIndex);
                }
            }

            // Add previous page if we are not on the first page
            result.Add(SimpleGrid.TableState.CurrentPage - 1);
        }

        // Add the current page
        result.Add(SimpleGrid.TableState.CurrentPage);

        // Add the next page where possible
        if (SimpleGrid.TableState.CurrentPage < SimpleGrid.TableState.TotalPageCount - 1)
        {
            result.Add(SimpleGrid.TableState.CurrentPage + 1);

            // If we are on the very first page then add the third page if possible
            if (SimpleGrid.TableState.CurrentPage == 0 && SimpleGrid.TableState.TotalPageCount - 1 >= 2)
            {
                result.Add(2);
            }
        }

        return result;
    }

    private async Task ChangePage(int newPage)
    {
        SimpleGrid.TableState.ChangePage(newPage);
        await SimpleGrid.ReloadData();
    }
}