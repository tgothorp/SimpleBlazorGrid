@* ReSharper disable once CheckNamespace *@
@namespace SimpleBlazorGrid.Internal

@using SimpleBlazorGrid.Options
@using SimpleBlazorGrid.Filters
@using System.Text

@typeparam TType

<th style="@(ColumnWidth())">
    <div class="sdg-heading-container @(Hidden ? "sdg-heading-container-hidden" : "")">

        @if (SimpleFilter is not null)
        {
            <div class="sdg-heading-filter" @onclick="ShowSimpleFilter">
                <_DataGridFilterGlyph Active="SimpleFilter.FilterActive"/>
            </div>
        }

        <div class="sdg-heading-text" @onclick="Sort">
            <span>@ColumnHeading()</span>
        </div>
    </div>
</th>

@code {

    [CascadingParameter]
    public SimpleGrid<TType> SimpleGrid { get; set; }

    [Parameter]
    public SimpleColumn<TType> Column { get; set; }

    [Parameter]
    public SortOptions SortOptions { get; set; }

    [Parameter]
    public bool SortAscending { get; set; }

    [Parameter]
    public Filter<TType> SimpleFilter { get; set; }

    [Parameter]
    public int? Width { get; set; }

    [Parameter]
    public bool Hidden { get; set; }

    private async Task Sort()
    {
        if (!Column.Sortable)
            return;

        await SimpleGrid.Sort(Column.PropertyName, SortAscending);
    }

    private int CalculateHeadingWidth()
    {
        if (SimpleFilter is not null && Column.Sortable)
            return 70;

        if (SimpleFilter is not null || Column.Sortable)
            return 85;

        return 100;
    }

    private string ColumnWidth()
    {
        return Width == null ? null : $"width: {Width}%";
    }

    private MarkupString ColumnHeading()
    {
        var sb = new StringBuilder();
        sb.Append(Column.Heading);
        
        switch (Column.Sortable)
        {
            case true when SortOptions.Property == Column.PropertyName:
                sb.Append(SortAscending ? "&nbsp;тее" : "&nbsp;тег");
                break;
            case true:
                sb.Append("&nbsp;теп");
                break;
        }

        return new MarkupString(sb.ToString());
    }

    private void ShowSimpleFilter()
    {
        SimpleGrid.EditSimpleFilter(SimpleFilter);
    }
}