@* ReSharper disable once CheckNamespace *@
@namespace SimpleBlazorGrid

@using System.Linq.Expressions
@using SimpleBlazorGrid.Extensions

@typeparam TType;

@inherits SimpleBlazorGrid.Filters.Filter<TType>

@if (ShouldShowFilter)
{
    <div class="sdg-filter">
        <div class="sdg-filter-container">
            <h2>Filter by @PropertyName</h2>
            <div class="sdg-filter-inputs">
                <input type="text" @bind-value="Value" placeholder="@PropertyName"/>
            </div>
            <div class="sdg-filter-buttons">
                <div class="clear">
                    <button @onclick="Clear">Clear</button>
                </div>
                <div class="apply">
                    <button @onclick="Apply">Apply Filter</button>
                </div>
            </div>
        </div>
    </div>
}


@code {

    [Parameter]
    public bool IgnoreCase { get; set; }

    [Parameter]
    public string DefaultValue { get; set; }

    public string Value { get; set; }

    protected override void OnInitialized()
    {
        // TODO: Validate that this filter can be applied to the target property (types match etc.)
        Value = DefaultValue;

        base.OnInitialized();
    }

    protected override Task Apply()
    {
        return Value.IsNotNullOrEmpty()
            ? base.Apply()
            : Clear();
    }

}