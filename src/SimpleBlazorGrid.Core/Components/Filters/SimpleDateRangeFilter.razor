@* ReSharper disable once CheckNamespace *@
@namespace SimpleBlazorGrid

@typeparam TType;

@using SimpleBlazorGrid.Extensions
@using SimpleBlazorGrid.Exceptions
@inherits SimpleBlazorGrid.Filters.Filter<TType>

@if (ShouldShowFilter)
{
    <div class="sdg-filter">
        <div class="sdg-filter-container">
            <h2>Filter by @HeadingName</h2>
            <div class="sdg-filter-inputs">
                @if (IncludeTime)
                {
                    <div>
                        <label>
                            <small>Start</small>
                        </label>
                        <input type="datetime-local"
                               min="@(Min.HasValue ? @Min.Value.ToString("yyyy-MM-ddTHH:mm") : "")"
                               max="@(Max.HasValue ? @Max.Value.ToString("yyyy-MM-ddTHH:mm") : "")"
                               @bind-value="StartValue"
                               placeholder="@HeadingName"/>
                    </div>

                    <div>
                        <label>
                            <small>End</small>
                        </label>
                        <input type="datetime-local"
                               min="@(Min.HasValue ? @Min.Value.ToString("yyyy-MM-ddTHH:mm") : "")"
                               max="@(Max.HasValue ? @Max.Value.ToString("yyyy-MM-ddTHH:mm") : "")"
                               @bind-value="EndValue"
                               placeholder="@HeadingName"/>
                    </div>
                }
                else
                {
                    <div>
                        <label>
                            <small>Start</small>
                        </label>
                        <input type="date"
                               min="@(Min.HasValue ? @Min.Value.ToString("yyyy-MM-dd") : "")"
                               max="@(Max.HasValue ? @Max.Value.ToString("yyyy-MM-dd") : "")"
                               @bind-value="StartValue"
                               placeholder="@HeadingName"/>
                    </div>

                    <div>
                        <label>
                            <small>End</small>
                        </label>
                        <input type="date"
                               min="@(Min.HasValue ? @Min.Value.ToString("yyyy-MM-dd") : "")"
                               max="@(Max.HasValue ? @Max.Value.ToString("yyyy-MM-dd") : "")"
                               @bind-value="EndValue"
                               placeholder="@HeadingName"/>
                    </div>
                }
            </div>
            <div class="sdg-filter-buttons">
                <div class="clear">
                    <button @onclick="Clear">Clear</button>
                </div>
                <div class="apply">
                    <button @onclick="Apply">Apply Filter</button>
                </div>
            </div>
        </div>
    </div>
}

@code {

    /// <summary>
    /// If set, the filter will be enabled when the table loads with this value as the start value
    /// </summary>
    /// <remarks>
    /// <code>DefaultEndValue</code> must also be set for this to take effect
    /// </remarks>
    [Parameter]
    public DateTime? DefaultStartValue { get; set; }
    
    /// <summary>
    /// If set, the filter will be enabled when the table loads with this value as the end value
    /// </summary>
    /// <remarks>
    /// <code>DefaultStartValue</code> must also be set for this to take effect
    /// </remarks>
    [Parameter]
    public DateTime? DefaultEndValue { get; set; }

    /// <summary>
    /// Sets the 'min' value on the inputs
    /// </summary>
    [Parameter]
    public DateTime? Min { get; set; }

    /// <summary>
    /// Sets the 'max' value on the inputs
    /// </summary>
    [Parameter]
    public DateTime? Max { get; set; }

    /// <summary>
    /// Determines if the time should be included when applying the filter
    /// </summary>
    [Parameter]
    public bool IncludeTime { get; set; }

    /// <summary>
    /// Should the start and end values be included in the filter 
    /// </summary>
    [Parameter]
    public bool Inclusive { get; set; }

    public DateTime? StartValue { get; set; }
    public DateTime? EndValue { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!PropertyType.IsDateType())
            throw new SimpleGridException($"Cannot apply date range filter to property '{typeof(TType)}.{PropertyName}' as is not a DateTime/DateOnly");
        
        if ((Nullable.GetUnderlyingType(PropertyType) ?? PropertyType) == typeof(DateOnly))
            IncludeTime = false;

        if (DefaultStartValue != null && DefaultEndValue != null)
        {
            StartValue = DefaultStartValue;
            EndValue = DefaultEndValue;

            DefaultStartValue = null;
            DefaultEndValue = null;

            await Apply();
        }

        await base.OnInitializedAsync();
    }

    protected override Task Apply()
    {
        if (StartValue is null || EndValue is null)
            return Task.CompletedTask;

        return base.Apply();
    }

    protected override Task Clear()
    {
        StartValue = null;
        EndValue = null;

        return base.Clear();
    }
}