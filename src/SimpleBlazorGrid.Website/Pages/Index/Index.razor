@page "/"
@using SimpleBlazorGrid.Website.Data
@using SimpleBlazorGrid.DataSource
@using Humanizer
@using SimpleBlazorGrid.Website.Pages.Shared

@inject VideoGameRepo VideoGameRepo
@inject NavBarService NavBarService

<div class="top">
    <h1>SIMPLE BLAZOR GRID</h1>
    <p>A free and easy way to simplify your Blazor data tables!</p>
</div>

<div class="bottom">
    <div class="container">
        <div class="features">
            <h3>Features</h3>
            <ul>
                <li>Supports .NET 6 / 7 +</li>
                <li>Easily configure sorting and pagination</li>
                <li>Simple filter components make data filtering a breeze!</li>
                <li>Works with Blazor WASM and Blazor Server</li>
                <li>100% free and open source (MIT)</li>
                <li>Entity Framework integration available</li>
            </ul>


            <div class="buttons">
                <div>
                    <a>
                        <button type="button">Download from Nuget</button>
                    </a>
                </div>
                <div>
                    <a href="/documentation">
                        <button type="button">Documentation</button>
                    </a>
                </div>
            </div>
        </div>

        <div class="table">
            <SimpleGrid
                TType="VideoGame"
                Title="Metacritic™ Top 100 Video Games of All Time"
                Subtitle="Game releases by user score"
                SimpleGridDataSource="new SimpleGridEnumerableDataSource<VideoGame>(VideoGameRepo.GetAllVideoGames())"
                ItemsPerPage="10">
                <Filters>
                    <SimpleStringFilter TType="VideoGame" For="@(x => x.Name)" IgnoreCase="@true"/>
                    <SimpleDateRangeFilter TType="VideoGame" For="@(x => x.ReleaseDate)"/>
                    <SimpleEnumFilter TType="VideoGame" TEnum="Platform" For="@(x => x.Platform)" AllowMultiple="@true"/>
                    <SimpleNumericFilter TType="VideoGame" Step="1" For="@(x => x.Metascore)" Min="94" Max="99" />
                </Filters>
                <Columns>
                    <SimpleColumn TType="VideoGame" For="@(x => x.Rank)" Sortable="@true" Width="10"/>
                    <SimpleColumn TType="VideoGame" For="@(x => x.Name)" Sortable="@true"/>
                    <SimpleColumn TType="VideoGame" For="@(x => x.ReleaseDate)" Sortable="@true" Width="15"/>
                    <SimpleColumn TType="VideoGame" For="@(x => x.Platform)" Width="12">
                        <SimpleColumnTemplate Context="item">
                            @switch (item.Platform)
                            {
                                case Platform._3DS:
                                    <span>3 DS</span>
                                    break;
                                case Platform.GameCube:
                                    <span>GameCube</span>
                                    break;
                                default:
                                    @item.Platform.Humanize(LetterCasing.Title)
                                    break;
                                    
                            }
                        </SimpleColumnTemplate>
                    </SimpleColumn>
                    <SimpleColumn TType="VideoGame" For="@(x => x.Developer)" Width="25">
                        <SimpleColumnTemplate Context="item">
                            @item.Developer
                            <br/>
                            <small>Published by: @item.Publisher</small>
                        </SimpleColumnTemplate>
                    </SimpleColumn>
                    <SimpleColumn TType="VideoGame" For="@(x => x.Metascore)" Sortable="@true" />
                </Columns>
            </SimpleGrid>
        </div>
    </div>
</div>

@code
{
    protected override void OnInitialized()
    {
        NavBarService.SetNavBarSection(NavSection.Index);
        base.OnInitialized();
    }
}
